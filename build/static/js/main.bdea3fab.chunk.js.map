{"version":3,"sources":["Tmdb.js","components/MovieRow/index.js","components/FeaturedMovie/index.js","components/Header/index.js","App.js","index.js"],"names":["API_KEY","basicFetch","endpoint","a","fetch","req","json","getHomelist","slug","title","items","getMoveiInfo","movieID","type","info","useState","scrollX","setScrollX","className","onClick","x","Math","round","window","innerWidth","listW","results","length","style","marginLeft","width","map","item","key","src","poster_path","alt","original_title","firstDate","Date","first_air_date","genres","i","push","name","backgroundSize","backgroundPosition","backgroundImage","backdrop_path","original_name","vote_average","getFullYear","number_of_seasons","overview","href","id","join","black","movieList","setMovieList","featuredData","setFeaturedata","blackHeader","setBlackHeader","useEffect","Tmdb","list","originals","filter","randomChosen","floor","random","chosen","choseInfo","loadAll","scrollListener","scrollY","addEventListener","removeEventListener","role","aria-label","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bdea3fab.chunk.js","sourcesContent":["const API_KEY = '83f28d1f69de158fdd66075c524346cd';\r\nconst API_BASE = 'https://api.themoviedb.org/3';\r\n\r\n\r\nconst basicFetch = async (endpoint) => {\r\n  const req = await fetch(`${API_BASE}${endpoint}`);\r\n  const json = await req.json();\r\n  return json;\r\n}\r\n\r\n\r\n// eslint-disable-next-line\r\nexport default {\r\n  getHomelist: async () => {\r\n    return [\r\n      {\r\n        slug: 'originals',\r\n        title: 'Orignais do Netflix',\r\n        items: await basicFetch(`/discover/tv?with_network=213&language=pt-BR&api_key=${API_KEY}`)\r\n      },\r\n      {\r\n        slug: 'trending',\r\n        title: 'Recomendados para você',\r\n        items: await basicFetch(`/trending/all/week?language=pt-BR&api_key=${API_KEY}`)\r\n      },\r\n      {\r\n        slug: 'toprated',\r\n        title: 'Em Alta',\r\n        items: await basicFetch(`/movie/top_rated?language=pt-BR&api_key=${API_KEY}`)\r\n      },\r\n      {\r\n        slug: 'action',\r\n        title: 'Ação',\r\n        items: await basicFetch(`/discover/movie?with_genres=28&language=pt-BR&api_key=${API_KEY}`)\r\n      },\r\n      {\r\n        slug: 'comedy',\r\n        title: 'Comédia',\r\n        items: await basicFetch(`/discover/movie?with_genres=35&language=pt-BR&api_key=${API_KEY}`)\r\n      },\r\n      {\r\n        slug: 'horro',\r\n        title: 'Terror',\r\n        items: await basicFetch(`/discover/movie?with_genres=27&language=pt-BR&api_key=${API_KEY}`)\r\n      },\r\n      {\r\n        slug: 'romance',\r\n        title: 'Romance',\r\n        items: await basicFetch(`/discover/movie?with_genres=10749&language=pt-BR&api_key=${API_KEY}`)\r\n      },\r\n      {\r\n        slug: 'documentary',\r\n        title: 'Documentários',\r\n        items: await basicFetch(`/discover/movie?with_genres=99&language=pt-BR&api_key=${API_KEY}`)\r\n      },\r\n    ];\r\n  },\r\n\r\n  getMoveiInfo: async (movieID, type) => {\r\n    let info = {};\r\n    if (movieID) {\r\n      switch (type) {\r\n        case 'movie':\r\n          info = await basicFetch(`/movie/${movieID}?language=pt-BR&api_key=${API_KEY}`);\r\n          break;\r\n\r\n        case 'tv':\r\n          info = await basicFetch(`/tv/${movieID}?language=pt-BR&api_key=${API_KEY}`);\r\n          break;\r\n\r\n        default:\r\n          info = null;\r\n\r\n      }\r\n\r\n    }\r\n\r\n    return info;\r\n\r\n  }\r\n\r\n}","import React, { useState } from 'react';\r\nimport './MovieRow.css';\r\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\n// eslint-disable-next-line\r\nexport default ({ title, items }) => {\r\n  const [scrollX, setScrollX] = useState(-400)\r\n  const handleLeftArrow = () => {\r\n\r\n    let x = scrollX + Math.round(window.innerWidth / 2);\r\n\r\n    if (x > 0) {\r\n      x = 0;\r\n    }\r\n    setScrollX(x);\r\n  }\r\n\r\n  const handleRightArrow = () => {\r\n\r\n    let x = scrollX - Math.round(window.innerWidth / 2);\r\n    let listW = items.results.length * 150;\r\n    if ((window.innerWidth - listW) > x) {\r\n\r\n      x = (window.innerWidth - listW) - 60;\r\n\r\n    }\r\n\r\n    setScrollX(x);\r\n\r\n  }\r\n\r\n  return (\r\n    <div className=\"movieRow\">\r\n      <h2>{title}</h2>\r\n\r\n      <div className=\"arrow-left\" onClick={handleLeftArrow}>\r\n        <NavigateBeforeIcon />\r\n      </div>\r\n      <div className=\"arrow-right\" onClick={handleRightArrow}>\r\n        <NavigateNextIcon />\r\n      </div>\r\n      <div className=\"movieRow--listarea\">\r\n        <div className=\"movieRow--list\" style={{\r\n          marginLeft: scrollX,\r\n          width: items.results.length * 150\r\n        }}>\r\n          {items.results.length > 0 && items.results.map((item, key) => (\r\n            <div key={key} className=\"movieRow--item\">\r\n              <img src={`https://image.tmdb.org/t/p/w300${item.poster_path}`} alt={item.original_title} />\r\n\r\n            </div>\r\n          ))}\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React from 'react';\r\nimport './FeaturedMovie.css';\r\n// eslint-disable-next-line\r\nexport default ({ item }) => {\r\n\r\n  let firstDate = new Date(item.first_air_date);\r\n  let genres = [];\r\n  for (let i in item.genres) {\r\n    genres.push(item.genres[i].name);\r\n  }\r\n\r\n  return (\r\n    <section className=\"featured\" style={{\r\n      backgroundSize: 'cover',\r\n      backgroundPosition: 'center',\r\n      backgroundImage: `url(https://image.tmdb.org/t/p/original${item.backdrop_path})`\r\n    }}>\r\n      <div className=\"featured--vertical\">\r\n        <div className=\"featured--horizontal\">\r\n          <div className=\"featured--name\">{item.original_name}</div>\r\n          <div className=\"info\">\r\n            <div className=\"points\">{item.vote_average} pontos</div>\r\n            <div className=\"year\">{firstDate.getFullYear()}</div>\r\n            <div className=\"seasons\">{item.number_of_seasons} Temporada{item.number_of_seasons !== 1 ? 's' : ''}</div>\r\n          </div>\r\n          <div className=\"description\">{item.overview}</div>\r\n          <div className=\"btns\">\r\n            <a href={`/watch/${item.id}`} className=\"whatbtn\"> ► Assitir</a>\r\n            <a href={`/list/add/${item.id}`} className=\"blackbtn\"> + Minha Lista</a>\r\n\r\n          </div>\r\n          <div className=\"genres\"><strong>Gêneros:</strong> {genres.join(', ')}</div>\r\n        </div>\r\n\r\n      </div>\r\n    </section>\r\n  );\r\n\r\n}","import React from 'react';\r\nimport './Header.css';\r\n// eslint-disable-next-line\r\nexport default ({ black }) => {\r\n\r\n  return (\r\n    <header className={black ? 'black' : ''}>\r\n      <div className=\"logo\">\r\n        <a href=\"/\">\r\n          <img src=\"https://logosmarcas.net/wp-content/uploads/2020/04/Netflix-Logo.png\" alt=\"Netflix\" />\r\n        </a>\r\n      </div>\r\n      <div className=\"user\">\r\n        <a href=\"/\">\r\n          <img src=\"https://ih0.redbubble.net/image.618427277.3222/flat,1000x1000,075,f.u2.jpg\" alt=\"usuário\" />\r\n        </a>\r\n      </div>\r\n    </header>\r\n  );\r\n}","import React, { useEffect, useState } from 'react';\nimport Tmdb from './Tmdb';\nimport './App.css';\nimport MovieRow from './components/MovieRow'\nimport FeaturedMovei from './components/FeaturedMovie';\nimport Header from './components/Header';\n\n// eslint-disable-next-line\nexport default () => {\n\n  const [movieList, setMovieList] = useState([]);\n  const [featuredData, setFeaturedata] = useState(null);\n  const [blackHeader, setBlackHeader] = useState(false);\n\n  useEffect(() => {\n    const loadAll = async () => {\n      let list = await Tmdb.getHomelist();\n      setMovieList(list);\n\n      let originals = list.filter(i => i.slug === 'originals');\n      let randomChosen = Math.floor(Math.random() * (originals[0].items.results.length - 1));\n      let chosen = originals[0].items.results[randomChosen];\n      let choseInfo = await Tmdb.getMoveiInfo(chosen.id, 'tv');\n      setFeaturedata(choseInfo);\n    }\n\n    loadAll();\n  }, []);\n\n  useEffect(() => {\n\n    const scrollListener = () => {\n      if (window.scrollY > 10) {\n        setBlackHeader(true);\n      } else {\n        setBlackHeader(false);\n      }\n    }\n\n    window.addEventListener('scroll', scrollListener);\n\n    return () => {\n      window.removeEventListener('scroll', scrollListener);\n    }\n\n  }, []);\n\n  return (\n    <div className=\"page\">\n\n      <Header black={blackHeader} />\n\n      {featuredData &&\n\n        <FeaturedMovei item={featuredData} />\n\n      }\n\n\n      <section className=\"lists\">\n        {movieList.map((item, key) => (\n          <div>\n            <MovieRow key={key} title={item.title} items={item.items} />\n          </div>\n        ))}\n      </section>\n\n      <footer>\n        Desenvolvido com <span role=\"img\" aria-label=\"coração\">❤️</span> Everson Ramiro<br />\n        Direitos da Imagem para NetFlix<br />\n        Dados pegos do site Themoviedb.org\n      </footer>\n\n      {movieList.length <= 0 &&\n\n        <div className=\"loading\">\n          <img src=\"https://media.wired.com/photos/592744d3f3e2356fd800bf00/master/w_2560%2Cc_limit/Netflix_LoadTime.gif\" alt=\"carregando netflix\" />\n        </div>\n      }\n    </div>\n  )\n\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}